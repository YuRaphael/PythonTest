# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        in_memory:
            memory:
                users:
                    user:
                        password: userpass
                        roles: 'ROLE_USER'
                    admin:
                        password: adminpass
                        roles: 'ROLE_ADMIN'
#                users:
#                  user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                  admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        default:
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
#            http_basic: ~
            # activate different ways to authenticate
            logout:
                path: /logout
                target: /
                
    access_control:
        # require ROLE_ADMIN for /admin*
         - { path: ^/admin, roles: ROLE_ADMIN } 
         
         
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext    
        
        
        
        
            # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
#人家的例子            
#security:
#encoders:
#    Symfony\Component\Security\Core\User\User: plaintext
#
#role_hierarchy:
#    ROLE_ADMIN:       ROLE_USER
#    ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#providers:
#    in_memory:
#        memory:
#            users:
#                user0:  { password: user0, roles: [ 'ROLE_ADMIN' ] }
#                user1:  { password: user1, roles: [ 'ROLE_SUPER_ADMIN' ] }
#
#firewalls:
#    dev:
#        pattern:  ^/(_(profiler|wdt)|css|images|js)/
#        security: false
#
#    login:
#        pattern:  ^/demo/secured/login$
#        security: false
#
#    secured_area:
#        pattern: ^/
#        logout: ~
#        anonymous: ~
#        http_basic:
#            realm: "Secured Area"
#
#access_control:
#    - { path: ^/question/*, roles: ROLE_ADMIN }
#    - { path: ^/questiongroup/*, roles: ROLE_ADMIN }
#    - { path: ^/answer/*, roles: ROLE_ADMIN }
#    - { path: ^/newslettertemplate/*, roles: ROLE_ADMIN }
#    - { path: ^/customer/*, roles: ROLE_SUPER_ADMIN }
#    - { path: ^/statistics/*, roles: ROLE_SUPER_ADMIN }